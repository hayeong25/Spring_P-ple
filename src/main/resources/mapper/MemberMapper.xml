<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.api.pple.dao.MemberDao">
    <select id="getMemberById" parameterType="String" resultType="com.api.pple.entity.Member">
        SELECT member_id,
               member_password,
               member_name,
               member_type,
               member_contact,
               member_email,
               member_level,
               member_business_no,
               member_company_name,
               member_zipcode,
               member_address,
               member_use_yn,
               member_enrollment_date,
               member_dormancy_expect_date
        FROM MEMBER
        WHERE member_id = #{id}
    </select>

    <insert id="insertMember">
        INSERT INTO MEMBER (
            member_id,
            member_password,
            member_name,
            member_type,
            member_contact,
            member_email,
            member_level,
            member_zipcode,
            member_address,
            member_use_yn,
            member_enrollment_date,
            member_dormancy_expect_date,
        ) VALUES (
            #{memberId},
            #{memberPassword},
            #{memberName},
            #{memberType},
            #{memberContact},
            #{memberEmail},
            #{memberLevel},
            #{memberZipcode},
            #{memberAddress},
            #{memberUseYn},
            #{memberEnrollmentDate},
            #{memberDormancyExpectDate}
        )
    </insert>

    <select id="getMemberByToken" parameterType="String" resultType="com.api.pple.entity.Member">
        SELECT  M.member_id,
                M.member_password,
                M.member_name,
                M.member_type,
                M.member_contact,
                M.member_email,
                M.member_level,
                M.member_business_no,
                M.member_company_name,
                M.member_zipcode,
                M.member_address,
                M.member_use_yn,
                M.member_enrollment_date,
                M.member_dormancy_expect_date
        FROM MEMBER M
            LEFT JOIN TOKEN T
                ON T.member_id = M.member_id
        WHERE T.token = #{accessToken}
    </select>
    
    <select id="getMemberIdByNameAndTelNo" resultType="String">
        SELECT member_id
        FROM MEMBER
        WHERE member_name = #{name}
        AND member_contact = #{telNo}
        AND member_state = '정상'
    </select>

    <update id="certifyBusiness">
        UPDATE MEMBER
        SET member_type = #{memberType},
            member_business_no = #{memberBusinessNo},
            member_company_name = #{memberCompanyName},
            modify_datetime = NOW()
        WHERE member_id = #{memberId}
    </update>

    <insert id="updateMemberPoint">
        INSERT INTO MEMBER_POINT (
            member_id,
            member_point_type,
            member_point_division,
            member_point,
            member_point_get_content,
            member_point_enrollment_date,
            member_point_use_date
        ) VALUES (
            #{memberId},
            #{memberPointType},
            #{memberPointDivision},
            #{memberPoint},
            #{memberPointGetContent},
            #{memberPointEnrollmentDate},
            #{memberPointUseDate}
        )
    </insert>

    <select id="getMemberPoint" parameterType="String" resultType="Integer">
        SELECT ISNULL(SUM(A.get - B.used), 0)
        FROM (
            SELECT SUM(member_point) AS get
            FROM MEMBER_POINT
            WHERE member_id = #{id}
            AND member_point_division = '적립'
        ) AS A,
             (
            SELECT SUM(member_point) AS used
            FROM MEMBER_POINT
            WHERE member_id = #{id}
            AND member_point_division = '사용'
        ) AS B
    </select>

    <select id="getMemberPointHistory" parameterType="String" resultType="com.api.pple.entity.Point">
        SELECT member_id,
               member_point_type,
               member_point_division,
               member_point,
               member_point_content,
               member_point_enrollment_date,
               member_point_use_date
        FROM MEMBER_POINT
        WHERE member_id = #{id}
    </select>

    <select id="getMonthlySales" parameterType="String" resultType="Integer">
        SELECT ISNULL(SUM(A.plus - B.minus), 0)
        FROM (
            SELECT ISNULL(SUM(sales_transaction_amount), 0) AS plus
            FROM SALES
            WHERE sales_state = '승인'
            AND sales_approval_date LIKE CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '%')
            AND member_id = {id}
            AND sales_delete_yn = 0
        ) AS A,
             (
            SELECT ISNULL(SUM(sales_transaction_amount), 0) AS minus
            FROM SALES
            WHERE sales_state != '승인'
            AND sales_approval_date LIKE CONCAT(DATE_FORMAT(NOW(), '%Y-%m'), '%')
            AND member_id = {id}
            AND sales_delete_yn = 0
        ) AS B
    </select>

    <select id="getTotalSales" parameterType="String" resultType="Integer">
        SELECT ISNULL(SUM(A.plus - B.minus), 0)
        FROM (
            SELECT ISNULL(SUM(sales_transaction_amount), 0) AS plus
            FROM SALES
            WHERE sales_state = '승인'
            AND member_id = {id}
            AND sales_delete_yn = 0
        ) AS A,
             (
            SELECT ISNULL(SUM(sales_transaction_amount), 0) AS minus
            FROM SALES
            WHERE sales_state != '승인'
            AND member_id = {id}
            AND sales_delete_yn = 0
        ) AS B
    </select>

    <update id="updatePassword">
        UPDATE MEMBER
        SET member_password = #{password},
            modify_datetime = NOW()
        WHERE member_id = #{id}
    </update>

    <update id="updateTelNo">
        UPDATE MEMBER
        SET member_contact = #{telNo},
            modify_datetime = NOW()
        WHERE member_id = #{id}
    </update>

    <update id="withdraw">
        UPDATE MEMBER
        SET member_use_yn = 0,
            modify_datetime = NOW()
        WHERE member_id = #{id}
    </update>
</mapper>